from _typeshed import Incomplete

class Layer:
    color: Incomplete
    display: Incomplete
    transparency: Incomplete
    material: Incomplete
    def __init__(self, from_display, shape=None, color: int = 0, transparency: float = 0.0, material=...) -> None: ...
    def add_shape(self, shape) -> None: ...
    def replace_shape(self, shape, index) -> None: ...
    def update_trsf_shape(self, shape, index, transformations) -> None: ...
    def merge(self, layer, clear: bool = False) -> None: ...
    def delete_shape_with_index(self, index) -> None: ...
    def delete_shape(self, shape_to_del) -> None: ...
    element_to_display: Incomplete
    count: int
    def clear(self) -> None: ...
    def get_shapes(self): ...
    def get_aisshape_from_topodsshape(self, topshape): ...
    def hide(self) -> None: ...
    def show(self) -> None: ...
